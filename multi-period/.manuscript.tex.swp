%% 
%% Copyright 2007-2020 Elsevier Ltd
%% 
%% This file is part of the 'Elsarticle Bundle'.
%% ---------------------------------------------
%% 
%% It may be distributed under the conditions of the LaTeX Project Public
%% License, either version 1.2 of this license or (at your option) any
%% later version.  The latest version of this license is in
%%    http://www.latex-project.org/lppl.txt
%% and version 1.2 or later is part of all distributions of LaTeX
%% version 1999/12/01 or later.
%% 
%% The list of all files belonging to the 'Elsarticle Bundle' is
%% given in the file `manifest.txt'.
%% 
%% Template article for Elsevier's document class `elsarticle'
%% with harvard style bibliographic references

\documentclass[authoryear,preprint,12pt]{elsarticle}

\usepackage{algorithm}
\usepackage{algpseudocode}

%% The `ecrc' package must be called to make the CRC functionality available
%\usepackage{ecrc}

%% Use the option review to obtain double line spacing
%% \documentclass[authoryear,preprint,review,12pt]{elsarticle}

%% Use the options 1p,twocolumn; 3p; 3p,twocolumn; 5p; or 5p,twocolumn
%% for a journal layout:
%% \documentclass[final,1p,times,authoryear]{elsarticle}
%% \documentclass[final,1p,times,twocolumn,authoryear]{elsarticle}
%% \documentclass[final,3p,times,authoryear]{elsarticle}
%% \documentclass[final,3p,times,twocolumn,authoryear]{elsarticle}
%% \documentclass[final,5p,times,authoryear]{elsarticle}
%% \documentclass[final,5p,times,twocolumn,authoryear]{elsarticle}

%% For including figures, graphicx.sty has been loaded in
%% elsarticle.cls. If you prefer to use the old commands
%% please give \usepackage{epsfig}

%% The amssymb package provides various useful mathematical symbols
\usepackage{amssymb}
%% The amsthm package provides extended theorem environments
%% \usepackage{amsthm}

%% The lineno packages adds line numbers. Start line numbering with
%% \begin{linenumbers}, end it with \end{linenumbers}. Or switch it on
%% for the whole article with \linenumbers.
%% \usepackage{lineno}

\journal{Applied Mathematical Modelling}

\begin{document}

\begin{frontmatter}
%% Title, authors and addresses

%% use the tnoteref command within \title for footnotes;
%% use the tnotetext command for theassociated footnote;
%% use the fnref command within \author or \affiliation for footnotes;
%% use the fntext command for theassociated footnote;
%% use the corref command within \author for corresponding author footnotes;
%% use the cortext command for theassociated footnote;
%% use the ead command for the email address,
%% and the form \ead[url] for the home page:
%% \title{Title\tnoteref{label1}}
%% \tnotetext[label1]{}
%% \author{Name\corref{cor1}\fnref{label2}}
%% \ead{email address}
%% \ead[url]{home page}
%% \fntext[label2]{}
%% \cortext[cor1]{}
%% \affiliation{organization={},
%%            addressline={}, 
%%            city={},
%%            postcode={}, 
%%            state={},
%%            country={}}
%% \fntext[label3]{}

\title{Multi-period and Multi-product Batch Processing Time Maximization Problem}

%% use optional labels to link authors explicitly to addresses:
%% \author[label1,label2]{}
%% \affiliation[label1]{organization={},
%%             addressline={},
%%             city={},
%%             postcode={},
%%             state={},
%%             country={}}
%%
%% \affiliation[label2]{organization={},
%%             addressline={},
%%             city={},
%%             postcode={},
%%             state={},
%%             country={}}

%\author{Tatiana Balbi Fraga}

\author{Tatiana Balbi Fraga\corref{cor1}\fnref{label1}}
\ead{tatiana.balbi@ufpe.br}
\cortext[cor1]{corresponding author}

\affiliation[label1]{
		   organization={Agreste Academic Center - Federal University of Pernambuco},%Department and Organization
           addressline={Avenida Marielle Franco, Nova Caruaru}, 
           city={Caruaru},
           postcode={55014-900}, 
           state={PE},
           country={Brazil}}

\begin{abstract}
...
\end{abstract}
%%Graphical abstract
\begin{graphicalabstract}
%\includegraphics[width=0.8\textwidth]{graphical.png}
\end{graphicalabstract}

%%Research highlights
\begin{highlights}
\item ...;
\item ...;
\item ...;
\item ....
\end{highlights}

\begin{keyword}
multiproduct batch \sep processing time maximization \sep C++ \sep LINGO
\end{keyword}
\end{frontmatter}

%% \linenumbers

%% main text
\section{Introduction}
\label{sec:intro}

T....

As scientific contributions,....

In the next sections, a presentation of problem is made along with an application example. Section \ref{sec:mathModel} presents an interger linear mathematical model for the problem and section \ref{sec:analyticalSol} presents an analytical method for its solution. Section \ref{sec:results} presents the tests and results obtained by a solver in C++ applying the analytical solution and a solver developed in LINGO to new proposed benchmarks. In sections \ref{sec:contributions} and \ref{sec:acknowledgments}, the contributions to this work are informed and acknowledgments are given, respectively. Finally, section \ref{sec:conclusions} presents the paper's conclusions and suggestions for future works.

\section{Multi-period and multi-product batch processing time maximization problem}
\label{sec:MBPTMP}

In MPMPBPTM problem we consider a planning horizon with $\textrm{ND}$ days, ($\textrm{ND} \geq 1$), and a daily demand ($\textrm{UD}_{id} \geq 0$) during this period for each product of the batch. Additionally, there is already a prior production plan, so that it is possible that there is already a previous production program for each product of the batch. Thus the availability for factory storage and shipping to outlets will be subject to change according to prior production planning. The problem is to determine a maximum processing time for the batch, taking into account the restrictions considered. For a better understanding of the problem, an example is presented below. \\

\emph{Example:} A certain machine must process a batch containing 2 different products: A and B. The production rate of A is 60 g/min while the production rate of B is 40 g/min. The factory has free stock for a maximum of 3000 g of any product, and, according to the company's inventory policy, a maximum of 3000 g of product A and 2000 g of product B can be stocked at the factory. For the first day, there is a demand for 1000 g of product A and 500 g of product B, and for the second day, there is a demand for 500 g of product A and 300 g of product B. The factory has an outlet that has free space in stock of 1000 g, which can receive a maximum of 600 g of each product. There is a previous production planning for 1000 units of product A for the first day and 1500 units of product B for the second day. A maximum time of 100 minutes of this machine can be allocated for processing this batch. What is the maximum possible time for processing this batch ?  \\

The following section presents a mathematical model for this problem.

\section{Mathematical model}
\label{sec:mathModel}

Given that: \\

$\textrm{UD}_{id}$ is the demand for the product $i$ on day $d$;

$\textrm{PO}_{id}$ is the planned production of the product $i$ on day $d$;

$\textrm{O}$ is the maximum quantity allowed for shipment of all products to outlets;

$\textrm{UO}_i$ is the maximum amount of product $i$ that can be shipped to outlets;

$\textrm{UI}_i$ is the factory free inventory for product $p$ on day 0; 

$\textrm{p}_i$ is the production rate of product $i$;

$\textrm{Z}$ is the timeout for batch processing; 

$UI_{id}$ is the maximum quantity allowed for stocking in the factory the product $i$ on day $d$;

$I_{d}$ is the free factory storage of all products on the end of the day $d$;

being $\textrm{I}$ the initial free inventory for all products on factory on the start of the (\emph{first}) planning day ($d=1$); \\

$P_i$ is the amount of product $i$ to be produced on batch on the current date (first planning day);

$D_{id}$ is the amount of product $i$ delivered for the demand on day $d$;

$O_{id}$ amount of product $i$ shipped to factory outlets;

$T$ is the batch processing time. \\

We have the problem: \\

\begin{equation}
max \quad T
\end{equation}

$s.t.$

\begin{equation}
P_i - \textrm{p}_i * T  = 0 \quad \forall i
\end{equation}

\begin{equation}
\label{eq:mmeq03}
P_i + UI_{i1} - D_{i1} - O_{i1} = \textrm{UI}_{i} - \textrm{PO}_{i1}
\end{equation}

\begin{equation}
\label{eq:mmeq04}
UI_{id} - UI_{i(d-1)} - D_{id} - O_{id} = - \textrm{PO}_{id} \quad \forall i, \forall (d>1)
\end{equation}

\begin{equation}
\label{eq:mmeq05}
I_{1} + \sum_{i}\{P_i -  D_{i1} - O_{i1}\} = \textrm{I}_{0} - \sum_{i}{\textrm{PO}_{i1}}
\end{equation}

\begin{equation}
I_{d} - I_{d-1} + \sum_{i}\{P_i -  D_{id} - O_{id}\} = - \sum_{i}{\textrm{PO}_{id}} \quad \forall (d>1)
\end{equation}

\begin{equation}
\sum_{d}{O_{id}} \leq \textrm{UO}_i \quad \forall i
\end{equation}

\begin{equation}
\sum_{i}{\sum_{d}{O_{id}}} \leq \textrm{O}
\end{equation}

\begin{equation}
\label{eq:mmeq09}
D_{i1} \leq \textrm{UD}_{i1} \quad \forall i
\end{equation}

\begin{equation}
D_{id} \leq \sum_{k=1}^{d}{\textrm{UD}_{ik}} - \sum_{k=1}^{d-1}{D_{ik}}  \quad \forall i, \forall d>1
\end{equation}

\begin{equation}
T \leq \textrm{Z}
\end{equation}

\begin{equation}
UI_{id}, I_{d}, O_{id}, D_{id} \in  \mathbb{Z}^+ \quad \forall i,d
\end{equation}

\begin{equation}
I_{d} \in  \mathbb{Z}^+ \quad \forall d
\end{equation}

where: \\

Constraints in (2) relate the quantity produced, $P_i$, to batch processing time $T$. Constraints in (3) calculate the quantity produced, $P_i$, as a function of the primary variables, $D_i$, $O_i$ and $I_i$. Constraints in (4), (5), and (7) state that the quantity delivered to demand, the quantity shipped to the autlets, and the factory-stocked quantity of each product must be less than their respective known limits. Constraints (6) and (8) state that both the sum of product quantities sent to the autlets and the sum of product quantities stocked in the factory must be less than their respective maximum allowed values. The restriction in (9) establishes that there is a batch processing time limit, $\textrm{Z}$, that must be respected. And finally, the constraints in (10) inform the nature of the decision variables.


\section{Exact optimizatin method}
\label{sec:method}

Uma solução ótima para este problema pode ser construída através de seis etapas, conforme algoritmos apresentados a seguir: \\

\begin{algorithm}
\caption{Solving MMBPTM problem | Part 01 - distribution planned production ignoring restrictions defined for the set.}\label{alg:part01}
\begin{algorithmic}
	\Require $\textrm{UD}_{id}, \textrm{PO}_{id}, \textrm{UO}_i, \textrm{UI}_i, \forall i; \textrm{O}, \textrm{I}$.
	
	
	\State $O \gets \textrm{O}$
	
	\State $I_{0} \gets \textrm{I}$
	
	\For{all $d$}
		\For{all $i$}
			\If{$d = 1$}
				\State $UD_{id} \gets \textrm{UD}_{id}$
				\State $A_{id} \gets \textrm{PO}_{id}$
				\State $UI_{i(d-1)} \gets \textrm{UI}_i$		
			\Else
				\State $UD_{id} \gets \sum_{k=1}^{d}\{\textrm{UD}_{ik}\} - \sum_{k=1}^{d-1}\{D_{ik}\}$
				\State $A_{id} \gets \min\{\sum_{k=1}^{d-1}\{\textrm{PO}_{ik} - D_{ik} - O_{ik}\}\}  + 									\textrm{PO}_{id}$ 
			
		
			\EndIf
		\EndFor
		\State
		
		\State $D_{id} \gets  \min\{UD_{id}, A_{id}\}$
		\State $UI_{id} \gets UI_{i(d-1)} - \textrm{PO}_{id} + D_{id}$
		\State $I_{d} \gets I_{d-1} - \textrm{PO}_{id} + D_{id}$
		
		\State
		
		\If{$UI_{id} < 0$}
			\State $O_{i1} \gets - UI_{i1}$
			\State $UO_i \gets UO_i - O_{id}$
			\State $O \gets O - O_{id}$
			\State $I_{d} \gets I_{d} + O_{id}$
			\State $UI_{id} \gets 0$
			\State
			\If{$UO_i < 0 \textbf{ or } O < 0$}
				\State \textbf{Return:} error: planning is not feasible !
			\EndIf
		\EndIf
		
	\EndFor
	
	\State \textbf{Return:} $O_{id}, UI_{id}, \forall (i, d); I_d, \forall d; UO_i, \forall i; O$.
\end{algorithmic}
\end{algorithm}

\begin{algorithm}
\caption{Solving MMBPTM problem | Part 02 - adjustment for atteining feasiability.}\label{alg:part02}
\begin{algorithmic}
	\Require $O_{id}, UI_{id}, \forall (i, d); I_d, \forall d; UO_i, \forall i; O$.
	
	\For{all $d$}
		\If{$I_{d} < 0$}
			\For{all $i$}
				\State $O_{id} \gets O_{id} + \min\{UO_i, |I_{d}|\}$
				\State $UO_i \gets UO_i - \min\{UO_i, |I_{d}|\}$
				\State $O \gets O - \min\{UO_i, |I_{d}|\}$
				\For{all $k \geq d$}
					\State $UI_{ik} \gets UI_{ik} + \min\{UO_i, |I_{d}|\}$
					\State $I_{k} \gets I_{k} + \min\{UO_i, |I_{d}|\}$
				\EndFor
				\If{$I_{d} = 0$}
					\State break;
				\EndIf
			\EndFor
		\EndIf
	\EndFor
	
	\State \textbf{Return:} $O_{id}, UI_{id}, \forall (i, d); I_d, \forall d; UO_i, \forall i; O$.
\end{algorithmic}
\end{algorithm}

\begin{algorithm}
\caption{Solving MMBPTM problem | Part 03 - generating a MBPTM problem.}\label{alg:part03}
\begin{algorithmic}
	\Require $O_{id}, UI_{id}, \forall (i, d); I_d, \forall d; UO_i, \forall i; O$.
	
	\For{all $i$}
		\State $\textrm{UD}_{i} = UD_{i1}$
		\State $\textrm{UO}_i = UO_i$
		\State $\textrm{UI}_i = \min_d\{UI_{id}\}$
	\EndFor
	
	\State $\textrm{O} = O$
	\State $\textrm{I} = \min_d\{I_{d}\}$
	
	\State \textbf{Return:} $\textrm{UD}_{i}, \textrm{UO}_i, \textrm{UI}_i, \forall i; \textrm{O}, \textrm{I}$.
\end{algorithmic}
\end{algorithm}

\begin{algorithm}
\caption{Solving MMBPTM problem | Part 04 - find an optimal $T$ to the MBPTM problem.}\label{alg:part04}
\begin{algorithmic}
	\Require $\textrm{UD}_i, \textrm{UO}_i, \textrm{UI}_i, \textrm{p}_i, \forall i, \textrm{O}, \textrm{I}, \textrm{Z}$
	\State $T^* \gets \lfloor{\min \{\min_{\forall i} \{(\textrm{UO}_i + \textrm{UI}_i + \textrm{UD}_i) / \textrm{p}_i\},(\textrm{O} + \textrm{I} + \sum_i \textrm{UD}_i) / \sum_i {\textrm{p}_i}\}}\rfloor$
	\State $T \gets \min \{T^* , \textrm{Z}\}$
\State \textbf{Return:} $T$.
\end{algorithmic}
\end{algorithm}

\begin{algorithm}
\caption{Solving MMBPTM problem | Part 05 - calculate $D_i$, $O_i$ and $I_i$, $\forall i$, ignoring the restrictions defined for the set.}\label{alg:part05}
\begin{algorithmic}
	\Require $\textrm{UD}_i, \textrm{UO}_i, \textrm{UI}_i, \textrm{p}_i, \forall i, \textrm{O}, \textrm{I}, \textrm{Z}, T$.
	\For{all i}
		\State $P_i \gets T * \textrm{p}_i$
		\State $D_i \gets \min \{\textrm{UD}_i, E_i\}$
		\State $E_i \gets P_i - D_i$
		\State $O_i \gets \min \{\textrm{UO}_i, E_i\}$
		\State $E_i = E_i - O_i$
		\State $\textrm{UO}_i = \textrm{UO}_i - O_i$
		\State $I_i = E_i$
		\State $\textrm{UI}_i = \textrm{UI}_i - I_i$
	\EndFor
	\State $SO = \textrm{O} - \sum_i{O_i}$
	\State $SI = \textrm{I} - \sum_i{I_i}$
	\State \textbf{Return:} $D_i, O_i, I_i, P_i, E_i, \textrm{UO}_i, \textrm{UI}_i, \forall i, SO, SI$.
\end{algorithmic}
\end{algorithm}

\begin{algorithm}
\caption{Solving MMBPTM problem | Part 06: redistribute production to comply with limitation restrictions for the batch products set.}\label{alg:part06}
\begin{algorithmic}
\Require $O_i, I_i, \textrm{UO}_i, \textrm{UI}_i, \forall i, SO, SI$.
\If{$SO < 0$}
\For{all $i$}
	\State $O_i \gets O_i - \min\{ O_i, UI_i, |SO|\}$
	\State $I_i \gets I_i + \min\{ O_i, UI_i, |SO|\}$
	\State $SO \gets SO + \min\{ O_i, UI_i, |SO|\}$
	\If{$SO = 0$}
		break looping for;
	\EndIf
\EndFor
\EndIf

\If{$SI < 0$}
\For{all $i$}
	\State $I_i \gets I_i - \min\{ I_i, UO_i, |SI|\}$
	\State $O_i \gets O_i + \min\{ I_i, UO_i, |SI|\}$
	\State $SI \gets SI + \min\{ I_i, UO_i, |SI|\}$
	\If{$SI = 0$}
		break looping for;
	\EndIf
\EndFor
\EndIf
\State \textbf{Return:} $O_i, I_i, \forall i$.
\end{algorithmic}
\end{algorithm}

\section{Tests and results}
\label{sec:results}

To test the developed model and analytical solution method, we created a solver in C++ and a solver in LINGO (https://github.com/tbfraga/COPSolver). The tests were performed on a notebook with an Intel i7 processor. We tested the solvers developed for the benchmarks presented on Tables \ref{tab:MBPTMP001}, \ref{tab:MBPTMP002} and \ref{tab:MBPTMP003}, and for randon benchmarks generated by the following functions: \\

\begin{equation}
\textrm{p}_i = \textrm{rand}()\%30 + 10
\end{equation}

\begin{equation}
\textrm{UD}_i = \textrm{rand}()\%3000 + 800;
\end{equation}

\begin{equation}
 \textrm{seed1} = \textrm{rand}()\%3000 + 500;
\end{equation}

\begin{equation}
\textrm{seed2} = \textrm{rand}()\%5000 + 1000;
\end{equation}

\begin{equation}
\textrm{O} = \textrm{N}/2*\textrm{seed1};
\end{equation}

\begin{equation}
\textrm{UO}_i = \textrm{rand}()\%(\textrm{seed1}-500) + 500;
\end{equation}

\begin{equation}
\textrm{I} = \textrm{N}/2*\textrm{seed2};
\end{equation}

\begin{equation}
\textrm{UI}_i = \textrm{rand}()\%(\textrm{seed2}-1000) + 1000;
\end{equation}

\begin{equation}
\textrm{Z} = 100;
\end{equation}


\begin{table}[h]
\begin{center}
\begin{tabular}[c]{c r r r}
$i$ & 1 & 2 & total \\
\cline {1-4} \\
$\textrm{p}_i$ & 60 & 40 & \\
$\textrm{UD}_i$ & 1000 & 500 & \\
$\textrm{UO}_i$ & 600 & 600 & 1000 \\
$\textrm{UI}_i$ & 3000 & 2000 & 3000 \\
\cline {1-4} \\
& & $\textrm{Z}$ & 100 \\
\end{tabular}
\caption{Benchmark MPBPTMP 001}
\label{tab:MBPTMP001}
\end{center}
\end{table}

\begin{table}[h]
\begin{center}
\begin{tabular}[c]{c r r r r}
$i$ & 1 & 2 & 3 & total \\
\cline {1-5} \\
$\textrm{p}_i$ & 60 & 40 & 50 \\
$\textrm{UD}_i$ & 1000 & 500 & 800 \\
$\textrm{UO}_i$ & 600 & 600 & 600 & 1500 \\
$\textrm{UI}_i$ & 3000 & 2000 & 1000 & 3500 \\
\cline {1-5} \\
& & & $\textrm{Z}$ & 100 \\
\end{tabular}
\caption{Benchmark MPBPTMP 002}
\label{tab:MBPTMP002}
\end{center}
\end{table}

\begin{table}[h]
\begin{center}
\begin{small}
\begin{tabular}[c]{c r r r r r r r r r r r }
$i$ & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 & total \\
\cline {1-12} \\
$\textrm{p}_i$ & 60 & 40 & 50 & 40 & 30 & 50 & 60 & 10 & 20 & 40\\
$\textrm{UD}_i$ & 1000 & 500 & 800 & 500 & 400 & 500 & 2000 & 300 & 500 & 1000 \\
$\textrm{UO}_i$ & 600 & 600 & 600 & 1500 & 300 & 200 & 500 & 800 & 0 & 200 & 3000 \\
$\textrm{UI}_i$ & 3000 & 2000 & 1000 & 800 & 3000 & 1000 & 400 & 300 & 200 & 0 & 5000 \\
\cline {1-12} \\
& & & & & & & & & & $\textrm{Z}$ & 100 \\
\end{tabular}
\caption{Benchmark MPBPTMP 003}
\label{tab:MBPTMP003}
\end{small}
\end{center}
\end{table}

Randomly generated benchmarks were named RMPBPTMP $\textrm{N}$, being $\textrm{N}$ the number of products. Seeking to enable the reproduction of the results, in the computational construction of the benchmarks we used the function srand((unsigned) source), where source is a defined value. To build the results presented in this work, we used source=0. The benchmarks used for the tests performed can be consulted at github.com/blinded.

Table \ref{tab:results} presents the results obtained by applying the analytical method (C++ solver) and the LINGO solver for the solution of the previously presented benchmarks.

\begin{table}[h]
\begin{center}
\begin{footnotesize}
\begin{tabular}[c]{l r r r r}
problem & LINGO solver & time (s) & analytical method & time (s) \\
\cline {1-5} \\
MPBPTMP 1 & 55 & 0.04 & 55 & 0.001 \\
MPBPTMP 2 & 48 & 0.06 & 48 & 0.001 \\
MPBPTMP 3 & 30 & 0.09 & 30 & 0.001 \\
RMPBPTMP 20 & 100 & 0.08 & 100 & 0.001 \\
RMPBPTMP 50 & 98 & 0.12 & 98 & 0.001\\
RMPBPTMP 100 & 98 & 0.12 & 98 & 0.002\\
RMPBPTMP 1,000 & 78 & 3.10 & 78 & 0.002\\
RMPBPTMP 10,000 & 70 & 168.87 & 70 & 0.006 \\
\cline {1-5} \\
\end{tabular}
\caption{Results obtained with the LINGO solver and the analytical method}
\label{tab:results}
\end{footnotesize}
\end{center}
\end{table}

It is important to point out that the LINGO solver was developed with the purpose of validating the results found by the proposed analytical method. As the analytical method is a polynomial time complexity method, we did not intend to compare computational costs, however it is possible to verify that both solvers are capable of finding optimal solutions for the proposed benchmarks very quickly, even for very large problems.

We have considered here a one-day period problem, so in a future work we will study the complexities of solving a multi-period problem and try to propose new solution methods if needed. 

\section{Conclusions and suggestions for future works}
\label{sec:conclusions}

In this paper we presented the Multi-product Batch Processing Time Maximization problem, as well as a mathematical model and an analytical solution method for this problem. The mathematical model and analytical method were tested, respectively, by a solver developed with the LINGO software, from LINDO Systems, and with a solver developed in C++ language. Optimum results were found for all proposed benchmarks, very quickly, even in the case of very large problems, which demonstrates the efficiency of the proposed method. As in this paper we considered a planning period of one day, in a future work we will study the complexities that arise when considering the same problem in a multi-period scenario. We will also verify if there is the possibility of extending the proposed analytical method to solve a class of linear integer programming problems with similar characteristics to the studied problem.

\section{CRediT authorship contribution statement} 
\label{sec:contributions}

T.B. Fraga: Conceptualization, Project administration, Supervision, Software, Methodology, Validation, Formal analysis, Writing – original draft, Writing – review \& editing. Í.R.B. Aquino: Data curation.

\section{Acknowledgments}
\label{sec:acknowledgments}

We are enormously grateful to Coordenação de Aperfeiçoamento de Pessoal de Nível Superior (CAPES) and to Conselho Nacional de Desenvolvimento Científico e Tecnológico (CNPq) for the financial support provided to our projects. We also thank LINDO systems team for the LINGO software license, without which this work would not have been possible and the to the owner of the company in the plastics sector, who allowed us to learn about his company's production process. Finally, we would like to thank Pró-reitoria de Extensão e Cultura da UFPE (PROExC) and the Research Director of Propesqi (Pró-reitoria de Pesquisa e Inovação da UFPE) for their support and recognition of our work, and dear Professors Antônio José da Silva Neto and João Flávio Vieira de Vasconcellos from IPRJ/UERJ, who contributed significantly to the formation of essential skills for the development of our projects.

%% The Appendices part is started with the command \appendix;
%% appendix sections are then done as normal sections
%% \appendix

%% \section{}
%% \label{}

%% If you have bibdatabase file and want bibtex to generate the
%% bibitems, please use
%%
%%  \bibliographystyle{elsarticle-harv} 
%%  \bibliography{<your bibdatabase>}

%% else use the following coding to input the bibitems directly in the
%% TeX file.

\begin{thebibliography}{1}

%% \bibitem[Author(year)]{label}
%% Text of bibliographic item

\bibitem[\protect\citeauthoryear{Eilon}{1985}]{Eilon1985}
Eilon. (1985). Multi-product batch production on a single machine - A problem revisited. {\it OMEGA Int. J. of Mgmt Sci.}, Vol. 13 (5), pp. 453--468.

\bibitem[\protect\citeauthoryear{Kim \emph{et al.}}{1996}]{KimEtAl1996}
Kim, M., Jung, J. H. and Lee, I. (1996). Intelligent scheduling and monitoring for multi-product networked batch processes. {\it  Computers chem. Engn}, Vol. 20 (Suppl.), pp. 1149--1154.

\bibitem[\protect\citeauthoryear{Li et al.}{2022}]{LiEtAl2022}
Li, C., Wang, F., Gupta, J.N.D., Chung, T. (2022). Scheduling identical parallel batch processing machines involving incompatible families with different job sizes and capacity constraints. {\it Computers \& Industrial Engineering}, Vol. 169, pp. 108115.

\bibitem[\protect\citeauthoryear{Liu \emph{et al.}}{2020}]{LiuEtAl2020}
Liu, G., Li, F., Yang, X., and Qiu. S. (2020). The multi-stage multi-product batch-sizing problem in the steel industry. {\it  Applied Mathematics and Computation}, Vol. 369, 124830.

\bibitem[\protect\citeauthoryear{Méndez \emph{et al.}}{2000}]{MendezEtAll2000}
Méndez, C.A., Henning, G.P., Cerdá, J. (2000). Optimal scheduling of batch plants satisfying multiple product
orders with different due-dates. {\it Computers and Chemical Engineering}, Vol. 24, pp. 2223--2245.

\bibitem[\protect\citeauthoryear{Omega Journal}{1993}]{Omega1993}
OMEGA Journal. (1993). Single Machine Multi-product Batch Scheduling: Testing Several Solution Methods. {\it  OMEGA Int. J. of Mgmt Sci.}, Vol. 21 (6), pp. 709--711.

\bibitem[\protect\citeauthoryear{Ravemark and Rippin}{1998}]{RavemarkAndRippin1998}
Ravemark, D. E., and Rippin, D. W. T. (1998). Optimal design of a multi-product batch plant. {\it Computers chem. Engng}, Vol. 22 (1-2), pp. 177--183.

\bibitem[\protect\citeauthoryear{Shi \emph{et al.}}{2017}]{ShiEtAll2017}
Shi, B., Qian, X., Sun, S., Yan, L. (2017). Rule-based scheduling of multi-stage multi-product batch plants with parallel units. {\it Chinese Journal of Chemical Engineering}, in press.

\end{thebibliography}
\end{document}

\endinput
%%
%% End of file `elsarticle-template-harv.tex'.
